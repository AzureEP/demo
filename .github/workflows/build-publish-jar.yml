# .github/workflows/01-build-publish-jar.yml
# Build, test, run quality gates, and publish JAR to Artifactory

name: 01-Build-and-Publish-JAR

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-publish-jar:
    runs-on: ubuntu-latest
    timeout-minutes: 30  # Prevent hanging jobs

    env:
      JF_URL: ${{ vars.JF_URL }}
      MAVEN_REPO: ${{ vars.JF_MVN_SNAPSHOTS_REPO }}
      MVN_FLAGS: -B -ntp -V
      JF_USER: ${{ secrets.JFROG_USER }}
      JF_TOKEN: ${{ secrets.JFROG_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
          server-id: artifactory
          server-username: ${{ secrets.JFROG_USER }}
          server-password: ${{ secrets.JFROG_TOKEN }}

      # Simplify version generation
      - name: Generate version
        id: version
        run: |
          SHA_SHORT="${GITHUB_SHA::7}"
          TIMESTAMP=$(date -u +%Y%m%d%H%M%S)
          VERSION="1.0.0-${SHA_SHORT}-${TIMESTAMP}-SNAPSHOT"
          echo "version=${VERSION}" >> "$GITHUB_OUTPUT"
          echo "Generated version: ${VERSION}"

      - name: Set project version
        run: |
          mvn $MVN_FLAGS versions:set -DnewVersion="${{ steps.version.outputs.version }}" -DgenerateBackupPoms=false

      # Combined build and test step
      - name: Build and Test
        run: |
          mvn $MVN_FLAGS clean compile test package
          echo "✅ Build and tests completed"

      # Simple quality checks (non-blocking)
      - name: Quality Checks
        continue-on-error: true
        run: |
          echo "Running quality checks..."
          mvn $MVN_FLAGS checkstyle:check || echo "⚠️ Checkstyle issues found"
          mvn $MVN_FLAGS spotbugs:check || echo "⚠️ SpotBugs issues found"

      # Setup JFrog CLI
      - name: Setup JFrog CLI
        if: github.ref == 'refs/heads/main'  # Only on main branch
        uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_URL: ${{ env.JF_URL }}
          JF_ACCESS_TOKEN: ${{ env.JF_TOKEN }}

      # Security scan (non-blocking)
      - name: Security Scan
        if: github.ref == 'refs/heads/main'
        continue-on-error: true
        run: |
          mkdir -p target/reports
          jf audit --format=json > target/reports/security-audit.json || echo "⚠️ Security scan completed with warnings"

      # Deploy only on main branch
      - name: Deploy to Artifactory
        if: github.ref == 'refs/heads/main'
        run: |
          echo "Deploying to Artifactory..."
          mvn $MVN_FLAGS deploy \
            -DskipTests \
            -DaltDeploymentRepository="artifactory::${{ env.JF_URL }}/artifactory/${{ env.MAVEN_REPO }}"

      # Verify deployment
      - name: Verify Deployment
        if: github.ref == 'refs/heads/main'
        run: |
          ARTIFACT_URL="${{ env.JF_URL }}/artifactory/${{ env.MAVEN_REPO }}/org/springframework/samples/petclinic/${{ steps.version.outputs.version }}"
          echo "Verifying deployment at: ${ARTIFACT_URL}"
          curl -f -u "${JF_USER}:${JF_TOKEN}" "${ARTIFACT_URL}/" || echo "⚠️ Verification failed"

      # Upload build artifacts
      - name: Upload Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ github.run_number }}
          path: |
            target/*.jar
            target/*.pom
            target/reports/*.json
          retention-days: 7

      # Simple summary
      - name: Build Summary
        if: always()
        run: |
          echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Version:** \`${{ steps.version.outputs.version }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch:** \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit:** \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "- **Deployed:** ✅ Yes" >> $GITHUB_STEP_SUMMARY
            echo "- **Repository:** \`${{ env.MAVEN_REPO }}\`" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Deployed:** ❌ No (PR/feature branch)" >> $GITHUB_STEP_SUMMARY
          fi